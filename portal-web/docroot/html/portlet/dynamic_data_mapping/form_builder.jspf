
<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@ include file="/html/portlet/dynamic_data_mapping/custom_fields.jspf" %>

<%
String[] availableLocales = LocalizationUtil.getAvailableLocales(script);
String defaultLanguageId = LocalizationUtil.getDefaultLocale(script);
%>

<div class="separator"><!-- --></div>

<div class="lfr-translation-manager" id="<portlet:namespace />translationManager">
	<div class="lfr-translation-manager-content">
		<label class="lfr-translation-manager-default-locale-label" for="<portlet:namespace />defaultLanguageId"><liferay-ui:message key="web-content-default-language" />:</label>

		<span class="lfr-translation-manager-selector nobr">
			<span class="lfr-translation-manager-default-locale-text lfr-translation-manager-translation lfr-translation-manager-translation-editing">
				<img src="<%= themeDisplay.getPathThemeImages() %>/language/<%= defaultLanguageId %>.png" />

				<%= LocaleUtil.fromLanguageId(defaultLanguageId).getDisplayName(locale) %>
			</span>

			<select class="aui-helper-hidden lfr-translation-manager-default-locale" id="defaultLocale">

				<%
				Locale[] locales = LanguageUtil.getAvailableLocales();

				for (int i = 0; i < locales.length; i++) {
				%>

					<aui:option label="<%= locales[i].getDisplayName(locale) %>" selected="<%= defaultLanguageId.equals(LocaleUtil.toLanguageId(locales[i])) %>" value="<%= LocaleUtil.toLanguageId(locales[i]) %>" />

				<%
				}
				%>

			</select>

			<a class="lfr-translation-manager-change-default-locale" href="javascript:;"><liferay-ui:message key="change" /></a>
		</span>

		<span class="lfr-translation-manager-add-menu">
			<liferay-ui:icon-menu
				cssClass="lfr-translation-manager-icon-menu"
				direction="down"
				icon='<%= themeDisplay.getPathThemeImages() + "/common/add.png" %>'
				message='<%= LanguageUtil.get(pageContext, "add-translation") %>'
				showArrow="<%= true %>"
				showWhenSingleIcon="<%= true %>"
			>

				<%
				for (int i = 0; i < locales.length; i++) {
				%>

					<liferay-ui:icon
						cssClass="lfr-translation-manager-translation-item"
						image='<%= "../language/" + LocaleUtil.toLanguageId(locales[i]) %>'
						lang="<%= LocaleUtil.toLanguageId(locales[i]) %>"
						message="<%= locales[i].getDisplayName(locale) %>"
						url="javascript:;"
					/>

				<%
				}
				%>

			</liferay-ui:icon-menu>
		</span>

		<c:if test="<%= availableLocales.length > 0 %>">
			<div class="lfr-translation-manager-available-translations">
				<label><liferay-ui:message key="available-translations" /></label>

				<span class="lfr-translation-manager-available-translations-links">

					<%
					for (int i = 0; i < availableLocales.length; i++) {
						if (defaultLanguageId.equals(availableLocales[i])) {
							continue;
						}
					%>

						<span class="lfr-translation-manager-translation" locale="<%= availableLocales[i] %>">
							<img src="<%= themeDisplay.getPathThemeImages() %>/language/<%= availableLocales[i] %>.png">

							<%= LocaleUtil.fromLanguageId(availableLocales[i]).getDisplayName(locale) %>

							<a class="lfr-translation-manager-translation-delete" href="javascript:;">x</a>
						</span>

					<%
					}
					%>

				</span>
			</div>
		</c:if>
	</div>
</div>


<div id="<portlet:namespace />formBuilderTabView">
	<ul class="aui-tabview-list aui-widget-hd" id="<portlet:namespace />formBuilderTabs">
		<li class="aui-tab">
			<a class="aui-tab-label" href="#<portlet:namespace />formBuilderTab">
				<liferay-ui:message key="view" />
			</a>
		</li>
		<li class="aui-tab">
			<a class="aui-tab-label" href="#<portlet:namespace />formBuilderSourceTab">
				<liferay-ui:message key="source" />
			</a>
		</li>
	</ul>

	<div class="aui-tabview-content aui-widget-bd" id="<portlet:namespace />formBuilderViewContent">
		<div class="aui-tabview-content-item" id="<portlet:namespace />formBuilderTab">
			<div class="aui-diagram-builder" id="<portlet:namespace />formBuilder">
				<div class="aui-diagram-builder-content aui-helper-clearfix" id="<portlet:namespace />formBuilderContent">
					<div class="aui-diagram-builder-tabs">
						<div class="aui-diagram-builder-tabs-content">
							<ul class="aui-tabview-list aui-widget-hd">
								<li class="aui-state-active aui-state-default aui-tab aui-tab-active">
									<span class="aui-tab-content">
										<a class="aui-tab-label" href="javascript:;">
											<liferay-ui:message key="fields" />
										</a>
									</span>
								</li>
								<li class="aui-state-default aui-tab">
									<span class="aui-tab-content">
										<a class="aui-tab-label" href="javascript:;">
											<liferay-ui:message key="settings" />
										</a>
									</span>
								</li>
							</ul>

							<div class="aui-tabview-content aui-widget-bd">
								<div class="aui-tabview-content-item"></div>

								<div class="aui-helper-hidden aui-tabview-content-item"></div>
							</div>
						</div>
					</div>

					<div class="aui-diagram-builder-content-container"></div>
				</div>
			</div>
		</div>
		<div class="aui-tabview-content-item" id="<portlet:namespace />formBuilderSourceTab">
			<div class="aui-form-builder-source-wrapper" id="<portlet:namespace />formBuilderSourceWrapper">
				<div class="aui-form-builder-source" id="<portlet:namespace />formBuilderEditor"></div>
			</div>
		</div>
	</div>
</div>
<%
JSONArray availableLocalesJSONArray = JSONFactoryUtil.createJSONArray();

for (int i = 0; i < availableLocales.length; i++) {
	availableLocalesJSONArray.put(availableLocales[i]);
}

JSONObject localesMapJSONObject = JSONFactoryUtil.createJSONObject();

for (int i = 0; i < locales.length; i++) {
	localesMapJSONObject.put(LocaleUtil.toLanguageId(locales[i]), locales[i].getDisplayName(locale));
}
%>

<aui:script use="event-custom-base,liferay-portlet-dynamic-data-mapping,aui-tabs,aui-ace-editor,liferay-xml-beautifier">
	var formEditor, xmlBeautifier;

	var clearFormBuilderNode = function() {
		var formBuilderNode = A.one('#<portlet:namespace />formBuilder');

		formBuilderNode.purge(true);

		formBuilderNode.html('<div class="loading-animation" />');
	};

	var getFormEditor = function() {
		if (!formEditor) {
			formEditor = new A.AceEditor(
				{
					boundingBox: '#<portlet:namespace />formBuilderEditor',
					mode: 'xml',
					tabSize: 4,
					width: A.one('#<portlet:namespace />formBuilderViewContent').get('clientWidth')
				}
			).render();
		}

		return formEditor;
	};

	var getXMLBeautifier = function() {
		if (!xmlBeautifier) {
			xmlBeautifier = new Liferay.XMLBeautifier();
		}

		return xmlBeautifier;
	};

	var isViewTabActive = function() {
		var tabView = formBuilderTabs.getTab(0);

		return !!tabView.get('active');
	};

	var reloadFormBuilderData = function() {
		A.io.request(
			'',
			{
				dataType: 'json',
				on: {
					success: function(event, id, obj) {
						
					},
					failure: function(event, id, obj) {
						
					}
				}
			}
		);
	};

	var switchToSource = function() {
		formEditor = getFormEditor();

		xmlBeautifier = getXMLBeautifier();

		var content = formBuilder.getXSD();

		content = xmlBeautifier.beautify(content);

		formEditor.set('value', content);
	};

	var switchToView = function() {
		clearFormBuilderNode();

		reloadFormBuilderData();
	};

	var formBuilderTabs = new A.TabView(
		{
			boundingBox: '#<portlet:namespace />formBuilderTabView',
			contentNode: '#<portlet:namespace />formBuilderViewContent',
			listNode: '#<portlet:namespace />formBuilderTabs'
		}
	).render();

	formBuilderTabs.after(
		'activeTabChange',
		function(event) {
			if (isViewTabActive()) {
				switchToView();
			}
			else {
				switchToSource();
			}
		}
	);

	var formBuilder = new Liferay.FormBuilder(
		{
			<c:if test="<%= Validator.isNotNull(scopeAvailableFields) %>">
				availableFields: A.Object.getValue(window, '<%= HtmlUtil.escapeJS(scopeAvailableFields) %>'.split('.')),
			</c:if>

			boundingBox: '#<portlet:namespace />formBuilder',
			enableEditing: false,

			<c:if test="<%= scriptJSONArray != null %>">
				fields: <%= scriptJSONArray.toString() %>,
			</c:if>

			portletNamespace: '<portlet:namespace />',
			portletResourceNamespace: '<%= HtmlUtil.escapeJS(portletResourceNamespace) %>',

			translationManager: {

				<c:if test="<%= availableLocalesJSONArray.length() > 0 %>">
					availableLocales: <%= availableLocalesJSONArray.toString() %>,
				</c:if>

				boundingBox: '#<portlet:namespace />translationManager',
				defaultLocale: '<%= defaultLanguageId %>',
				localesMap: <%= localesMapJSONObject.toString() %>,
				srcNode: '#<portlet:namespace />translationManager .lfr-translation-manager-content'
			},

			srcNode: '#<portlet:namespace />formBuilderContent'
		}
	).render();

	
	window.<portlet:namespace />formBuilder = formBuilder;

	window.<portlet:namespace />formBuilderTabs = formBuilderTabs;

	window.<portlet:namespace />formBuilderEditor = getFormEditor();

</aui:script>